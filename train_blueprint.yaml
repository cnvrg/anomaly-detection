# Copyright (c) 2022 Intel Corporation
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
# SPDX-License-Identifier: MIT

---
title: Anomaly Detection Train # Required on creation, replaces the "flow" parameter
version: 1.0.0 # Required
description: "Train an anomaly-detection model with your custom data to detect anomalous data points or outliers." # Optional for showing summary on UI
long_description: "Train an anomaly-detection model with your custom data, and deploy an endpoint, which detects anomalous data points or outliers."
# Optional properties for crediting authors
author: "cnvrg"
author_email: "libhub@cnvrg.io"

# At least one tag [inference, training, data] must be present
tags:
  - training

# List of tasks (libraries)
tasks:
  - title: S3 Connector
    top: 300
    left: 0

    # Type must be according to the flow task conventions (data, exec, deploy)
    type: exec

    # The library data
    library: s3-connector
    library_version: 1.0.0

    # The flattened library parameters (in this case we have training library)
    command: python s3-connector.py

    requirements:
      cpu: 3.5
      memory: 8
      gpu: 0
      hpu: 0

    image: cnvrg:v5.0
    language: python3

    # The "arguments" property changes to "params", rest remains the same.
    # Params in the blueprint yaml can be used to override the arguments in the library.
    params:
      - key: endpoint
        type: 'categorical'
        values:
          - 'http://s3.amazonaws.com download'
      - key: bucketname
        type: 'categorical'
        values:
          - 'libhub-readme'
      - key: localdir
        type: 'categorical'
        values:
          - '/cnvrg'
      - key: prefix
        type: 'categorical'
        values:
          - 'anomaly_data/creditcard_data_v2.csv'
          
  - title: Preprocess
    top: 400
    left: 100

    # Type must be according to the flow task conventions (data, exec, deploy)
    type: exec

    # The library data
    library: anomaly-data-preprocessing
    library_version: 1.0.0

    # The flattened library parameters (in this case we have training library)
    command: python3 data_preprocessing.py

    requirements:
      cpu: 3.5
      memory: 8
      gpu: 0
      hpu: 0

    image: cnvrg:v5.0
    language: python3

    # The "arguments" property changes to "params", rest remains the same.
    # Params in the blueprint yaml can be used to override the arguments in the library.
    params:
      - key: 'anomaly_data'
        type: 'categorical'
        values:
          - '/input/s3_connector/anomaly_data/creditcard_data.csv'
      - key: 'pca_arg'
        type: 'discrete'
        values:
          - '0.95'
      - key: 'pca_overwrite'
        type: 'discrete'
        values:
          - 'False'

  - title: autoencoder
    top: 450
    left: 300

    # Type must be according to the flow task conventions (data, exec, deploy)
    type: exec

    # The library data
    library: anomaly-autoencoder
    library_version: 1.0.0

    # The flattened library parameters (in this case we have training library)
    command: python3 model.py

    requirements:
      cpu: 3.5
      memory: 8
      gpu: 0
      hpu: 0

    image: cnvrg:v5.0
    language: python3

    # The "arguments" property changes to "params", rest remains the same.
    # Params in the blueprint yaml can be used to override the arguments in the library.
    params:
      - key: 'data_dir'
        type: 'categorical'
        values:
          - '/input/preprocess/data_df_pca.csv'
      - key: 'hidden_neurons'
        type: 'categorical'
        values:
          - 'default,3,5'
      - key: 'epochs'
        type: 'discrete'
        values:
          - '100'
          - '200'
          - '300'
      - key: 'dropout_rate'
        type: 'discrete'
        values:
          - '0.2,0.4'
      - key: 'l2_regularizer'
        type: 'discrete'
        values:
          - '0.1,0.3'
  - title: deepsvdd
    top: 100
    left: 500

    # Type must be according to the flow task conventions (data, exec, deploy)
    type: exec

    # The library data
    library: anomaly-deepsvdd
    library_version: 1.0.0

    # The flattened library parameters (in this case we have training library)
    command: python3 model.py

    requirements:
      cpu: 3.5
      memory: 8
      gpu: 0
      hpu: 0

    image: cnvrg:v5.0
    language: python3

    # The "arguments" property changes to "params", rest remains the same.
    # Params in the blueprint yaml can be used to override the arguments in the library.
    params:
      - key: 'data_dir'
        type: 'categorical'
        values:
          - '/input/preprocess/data_df_pca.csv'
      - key: 'hidden_neurons'
        type: 'categorical'
        values:
          - 'default,3,5'
      - key: 'epochs'
        type: 'discrete'
        values:
          - '100'
          - '200'
          - '300'
      - key: 'dropout_rate'
        type: 'discrete'
        values:
          - '0.2,0.4'
      - key: 'l2_regularizer'
        type: 'discrete'
        values:
          - '0.1,0.3'
      - key: 'use_ae'
        type: 'discrete'
        values:
          - 'False,True'
  - title: iforest
    top: 200
    left: 500

    # Type must be according to the flow task conventions (data, exec, deploy)
    type: exec

    # The library data
    library: anomaly-iforest
    library_version: 1.0.0

    # The flattened library parameters (in this case we have training library)
    command: python3 model.py

    requirements:
      cpu: 3.5
      memory: 8
      gpu: 0
      hpu: 0

    image: cnvrg:v5.0
    language: python3

    # The "arguments" property changes to "params", rest remains the same.
    # Params in the blueprint yaml can be used to override the arguments in the library.
    params:
      - key: 'data_dir'
        type: 'categorical'
        values:
          - '/input/preprocess/data_df_pca.csv'
      - key: 'n_estimators'
        type: 'discrete'
        values:
          - '100'
          - '150'
          - '200'
  - title: lscp
    top: 300
    left: 500

    # Type must be according to the flow task conventions (data, exec, deploy)
    type: exec

    # The library data
    library: anomaly-lscp
    library_version: 1.0.0

    # The flattened library parameters (in this case we have training library)
    command: python3 model.py

    requirements:
      cpu: 3.5
      memory: 8
      gpu: 0
      hpu: 0

    image: cnvrg:v5.0
    language: python3

    # The "arguments" property changes to "params", rest remains the same.
    # Params in the blueprint yaml can be used to override the arguments in the library.
    params:
      - key: 'data_dir'
        type: 'categorical'
        values:
          - '/input/preprocess/data_df_pca.csv'
      - key: 'n_bins'
        type: 'categorical'
        values:
          - '10'
          - '20'
          - '30'
      - key: 'local_region_size'
        type: 'discrete'
        values:
          - '30'
          - '40'
          - '50'
          
  - title: ocsvm
    top: 300
    left: 300

    # Type must be according to the flow task conventions (data, exec, deploy)
    type: exec

    # The library data
    library: anomaly-ocsvm
    library_version: 1.0.0

    # The flattened library parameters (in this case we have training library)
    command: python3 model.py

    requirements:
      cpu: 3.5
      memory: 8
      gpu: 0
      hpu: 0

    image: cnvrg:v5.0
    language: python3

    # The "arguments" property changes to "params", rest remains the same.
    # Params in the blueprint yaml can be used to override the arguments in the library.
    params:
      - key: 'data_dir'
        type: 'categorical'
        values:
          - '/input/preprocess/data_df_pca.csv'
      - key: 'nu'
        type: 'categorical'
        values:
          - '0.3,0.7,0.5'
      - key: 'tol'
        type: 'discrete'
        values:
          - '0.001,0.003,0.005'
      - key: 'kernel'
        type: 'categorical'
        values:
          - 'rbf,poly'
  - title: hbos
    top: 150
    left: 300

    # Type must be according to the flow task conventions (data, exec, deploy)
    type: exec

    # The library data
    library: anomaly-hbos
    library_version: 1.0.0

    # The flattened library parameters (in this case we have training library)
    command: python3 model.py

    requirements:
      cpu: 3.5
      memory: 8
      gpu: 0
      hpu: 0

    image: cnvrg:v5.0
    language: python3

    # The "arguments" property changes to "params", rest remains the same.
    # Params in the blueprint yaml can be used to override the arguments in the library.
    params:
      - key: 'data_dir'
        type: 'categorical'
        values:
          - '/input/preprocess/data_df_pca.csv'
      - key: 'n_bins'
        type: 'categorical'
        values:
          - '10'
          - '20'
          - '30'
      - key: 'alpha'
        type: 'discrete'
        values:
          - '0.1,0.3,0.5'
      - key: 'tol'
        type: 'discrete'
        values:
           - '0.4,0.7'
  - title: xgbod
    top: 400
    left: 500

    # Type must be according to the flow task conventions (data, exec, deploy)
    type: exec

    # The library data
    library: anomaly-xgbod
    library_version: 1.0.0

    # The flattened library parameters (in this case we have training library)
    command: python3 model.py

    requirements:
      cpu: 3.5
      memory: 8
      gpu: 0
      hpu: 0

    image: cnvrg:v5.0
    language: python3

    # The "arguments" property changes to "params", rest remains the same.
    # Params in the blueprint yaml can be used to override the arguments in the library.
    params:
      - key: 'data_dir'
        type: 'categorical'
        values:
          - '/input/preprocess/data_df_pca.csv'
      - key: 'n_estimators'
        type: 'categorical'
        values:
          - '100'
          - '150'
          - '200'
      - key: 'max_depth'
        type: 'categorical'
        values:
          - '3'
          - '5'
          - '7'
      - key: 'learning_rate'
        type: 'categorical'
        values:
          - '0.01,0.005,0.1'
  - title: compare
    top: 300
    left: 700

    # Type must be according to the flow task conventions (data, exec, deploy)
    type: exec

    # The library data
    library: anomaly-compare
    library_version: 1.0.0

    # The flattened library parameters (in this case we have training library)
    command: python3 compare.py

    requirements:
      cpu: 3.5
      memory: 8
      gpu: 0
      hpu: 0

    image: cnvrg:v5.0
    language: python3
    params: []
    conditions:
    - target: 0.0
      task:
      objective: max
      tag_key: average_precision_score
      value: ''

  - title: comparexgbod
    top: 400
    left: 700

    # Type must be according to the flow task conventions (data, exec, deploy)
    type: exec

    # The library data
    library: anomaly-comparexgbod
    library_version: 1.0.0

    # The flattened library parameters (in this case we have training library)
    command: python3 compare.py

    requirements:
      cpu: 3.5
      memory: 8
      gpu: 0
      hpu: 0

    image: python:3.8.6
    language: python3
    params: []
    conditions:
    - target: 0.0
      task:
      objective: max
      tag_key: average_precision_score
      value: ''
      
  - title: Inference
    top: 400
    left: 900

    # Type must be according to the flow task conventions (data, exec, deploy)
    type: deploy

    # The library data
    library: anomaly-inference
    library_version: 1.0.0

    # The flattened library parameters (in this case we have inference library)
    kind: webservice

    requirements:
      cpu: 3.5
      memory: 8
      gpu: 0
      hpu: 0

    image: cnvrg:v5.0
    language: python3
    accept_files: false

    file_name: predict.py # the entrypoint file name
    function_name: predict # the entrypoint function
    prep_file: '' # preprocess file name
    prep_function: '' # preprocess function
    input_example:
      vars: "7590-VHVEG,Female,0,Yes,No,1,No,No phone service,DSL,No,Yes,No,No,No,No,Month-to-month,Yes,Electronic check,29.85,29.85"
    input_schema:
      vars: text
    output_schema: {}

relations:
  - from: S3 Connector
    to: Preprocess
  - from: Preprocess
    to: autoencoder
  - from: Preprocess
    to: deepsvdd
  - from: Preprocess
    to: iforest
  - from: Preprocess
    to: hbos
  - from: Preprocess
    to: ocsvm
  - from: Preprocess
    to: lscp
  - from: Preprocess
    to: xgbod
  - from: autoencoder
    to: compare
  - from: deepsvdd
    to: compare
  - from: iforest
    to: compare
  - from: hbos
    to: compare
  - from: ocsvm
    to: compare
  - from: lscp
    to: compare
  - from: xgbod
    to: comparexgbod
  - from: comparexgbod
    to: Inference
  - from: compare
    to: Inference
  - from: Preprocess
    to: Inference
